name: transcendence

services:
  nginx:
    image: nginx:alpine
    container_name: transcendence-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/conf.d:/etc/nginx/conf.d:ro
      - ../scripts/certs:/etc/nginx/certs:ro
      - ../logs/nginx:/var/log/nginx
      - ../backend/srcs/public:/var/www/html:ro
    command: nginx -g "daemon off;"
    networks: [default, monitoring]
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      grafana:
        condition: service_healthy

  backend:
    build:
      context: ../backend
      dockerfile: ../docker/backend/Dockerfile
    container_name: transcendence-backend
    volumes:
      - ../backend/srcs/public:/var/www/html
      - ../backend/srcs/database:/var/www/database
    expose:
      - "${BACKEND_PORT:-9000}"
    environment:
      - APP_ENV=${ENV:-development}
      - APP_DEBUG=${APP_DEBUG:-true}
      - DB_DATABASE=/var/www/database/database.sqlite
      - APP_KEY=${APP_KEY}
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks: [default, monitoring]

  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/frontend/Dockerfile
    container_name: transcendence-frontend
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    networks: [default]

  # game-ws:
  #   build:
  #     context: ../game-ws
  #   container_name: transcendence-game-ws
  #   expose:
  #     - "8080"     # WebSocket interno
  #   networks: [default]

  prometheus:
    image: prom/prometheus:latest
    container_name: transcendence-prometheus
    volumes:
      - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
    command: ['--config.file=/etc/prometheus/prometheus.yml']
    # sin puertos publicados; Nginx hará proxy a /prometheus/
    expose:
      - "9090"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks: [monitoring]

  grafana:
    image: grafana/grafana:latest
    container_name: transcendence-grafana
    volumes:
      - ../monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ../monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    # sin puertos publicados; Nginx hará proxy a /grafana/
    expose:
      - "3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      prometheus:
        condition: service_healthy
    networks: [monitoring]

  node-exporter:
    image: prom/node-exporter:latest
    container_name: transcendence-node-exporter
    expose:
      - "9100"
    networks: [monitoring]

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: transcendence-cadvisor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /:/rootfs:ro
    expose:
      - "8080"
    networks: [monitoring]

    
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: transcendence-nginx-exporter
    command: ['--nginx.scrape-uri=http://nginx:8080/stub_status']
    expose:
      - "9113"
    depends_on: [nginx]
    networks: [monitoring]

  php-fpm-exporter:
    image: ghcr.io/hipages/php-fpm_exporter:latest
    container_name: transcendence-php-fpm-exporter
    environment:
      - PHP_FPM_SCRAPE_URI=tcp://backend:9000/status
    expose:
      - "9253"
    depends_on: [backend]
    networks: [monitoring]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    volumes:
      - ./elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./logs:/var/log:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5044:5044"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy

volumes:
  elasticsearch_data: {}

networks:
  default: {}
  monitoring: {}
