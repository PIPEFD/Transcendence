server {
    listen 80;
    server_name _;

    # Root directory for static files
    root /var/www/html/public;
    index index.php index.html;

    # Handle PHP files
    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass backend:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /var/www/html/public$fastcgi_script_name;
        include fastcgi_params;
    }

    # Handle static files
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
}

server {
    listen 80;
    server_name localhost;

    # Regla para reenviar las peticiones a la API al backend (PHP-FPM)
    # Cualquier URL que empiece por /api/ irá al servicio 'backend'.
    location /api/ {
        # Esta línea es importante para que el script PHP reciba la ruta correcta.
        # Elimina el prefijo /api de la URL antes de pasarla.
        rewrite ^/api/(.*)$ /$1 break;
        
        include fastcgi_params;
        # La variable $document_root aquí se refiere a la raíz que se necesita para el script.
        # Asumiendo que tu punto de entrada de la API está en /var/www/html/public/api/
        fastcgi_param SCRIPT_FILENAME /var/www/html/public/api/$fastcgi_script_name;
        fastcgi_pass backend:9000;
    }

    # Regla para reenviar todo el resto del tráfico al frontend
    # Esta es la regla por defecto si la URL no empieza por /api/.
    location / {
        # 'frontend' es el nombre del servicio en docker-compose.
        proxy_pass http://frontend:3000;

        # Cabeceras necesarias para que el proxy funcione correctamente con WebSockets y peticiones modernas.
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}